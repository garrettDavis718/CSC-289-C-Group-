<Window x:Name="MapWindow" x:Class="WpfUI.MapsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:m="clr-namespace:Microsoft.Maps.MapControl.WPF;assembly=Microsoft.Maps.MapControl.WPF"
        Title="MapWindow" 
        Height="632.522" Width="800" Background="#FF28282C">

    <Window.Resources>
        <Style x:Key="LabelStyle" TargetType="Label">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="BlueLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
            <Setter Property="Foreground" Value="#FF9A0EDC"/>
        </Style>
        <Style   x:Key="RedLabel" TargetType="Label" BasedOn="{StaticResource LabelStyle}">
            <Setter Property="Foreground" Value="#FFA42E2E"/>
        </Style>
        <Style x:Key="AddressStyle" TargetType="Label" >
            <Setter Property="Padding" Value="10px 0 0 0"/>
            <Setter Property="Margin" Value="0 0 0 0"  />
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="115"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Canvas Name="SearchParameters" Grid.Row="0" Grid.ColumnSpan="2" Margin="0,0,36,0">
            <Label Style="{StaticResource RedLabel}" Foreground="#FFE20B0B" FontSize="16" >Search PLANS Near a Location</Label>
            <Label Canvas.Left="0" Canvas.Top="24" Foreground="#FF0077FF" AllowDrop="True" FontWeight="Bold" Content="Search for" FontSize="14"></Label>
            <Label Style="{StaticResource LabelStyle}" AllowDrop="True" Canvas.Left="0" Canvas.Top="49" 
                   Content="Within" FontWeight="Bold" Foreground="#FFC9DC0E" />
            <ComboBox Canvas.Left="50" Name="Distance" Canvas.Top="53" Height="20"   >
                <ComboBoxItem IsSelected="True">1</ComboBoxItem>
                <ComboBoxItem>2</ComboBoxItem>
                <ComboBoxItem>5</ComboBoxItem>
            </ComboBox>
            <TextBox Height="25" Name="SearchNearby" Width="175" Text="Insert location" Canvas.Left="138" Canvas.Top="52"  />
            <Label Style="{StaticResource BlueLabel}" Canvas.Left="90" Canvas.Top="49" Content="mi of " Height="28" Name="label1" />
            <Button Click="Search_Click" Width="59" Height="24" Grid.ColumnSpan="2" Margin="0,77,251,39" HorizontalAlignment="Right" Canvas.Left="319" Canvas.Top="-25">Search</Button>
            <ComboBox Name="EntityType" Canvas.Left="82" Canvas.Top="28" Height="21"  Width="117" >
                <ComboBoxItem Tag="9995" IsSelected="True">PLANS Available</ComboBoxItem>
                <ComboBoxItem Tag="5800">PLANS Booked</ComboBoxItem>
                <ComboBoxItem Tag="7999">PLANS Created</ComboBoxItem>
                <ComboBoxItem Tag="9996">PLANS 4 L8er</ComboBoxItem>
            </ComboBox>
            <Label Style="{StaticResource RedLabel}" Foreground="#FFE20B0B" FontSize="16" Content="MAPS" Canvas.Left="640" Canvas.Top="62" />
            <Label x:Name="PlansLbl" Content="Plans" HorizontalContentAlignment ="Center" HorizontalAlignment="Center" Height="95" VerticalAlignment="Top" Width="191" FontFamily="Myanmar Text" FontWeight="Bold" FontSize="72" Foreground="#FF65E8C4" Canvas.Left="465" Canvas.Top="-11">
                <Label.Effect>
                    <DropShadowEffect Color="#FFEA2410" ShadowDepth="5"/>
                </Label.Effect>
            </Label>
        </Canvas>

        <!--MAP RESULT-->
        <StackPanel Grid.Row="1" Grid.Column="0" Margin="0,0,10,121" Background="#FF65E8C4">
            <Label Name="ErrorMessage" Visibility="Collapsed" ></Label>
            <ScrollViewer Name="SearchResults" Visibility="Collapsed" Height="300">
                <StackPanel Name="AddressList" ></StackPanel>
            </ScrollViewer>
        </StackPanel>

        <!--MAP-->
        <StackPanel Grid.Row="1" Grid.ColumnSpan="2" Margin="382,0,0,121" >
            <m:Map x:Name="myMap" ZoomLevel="16" Center="35.071890,-78.926870" 
                   CredentialsProvider="ArRifk6122ZB2RSEec6gQgmQte_NcFEvVXoj7Er8B-nzf9du4Xdd1mr1j9Sug378" Mode="AerialWithLabels" Height="365" Margin="10,0,-4,0"/>
            <Label x:Name="myMapLabel" Visibility="Hidden" HorizontalAlignment="Center" Content="Use + and - to zoom in and out" />
        </StackPanel>

        <!--BUTTONS-->
        <Button x:Name="PlansButton" Content="Plans" HorizontalAlignment="Left" Height="45" Margin="40,404,0,0" Grid.Row="1" VerticalAlignment="Top" Width="130" Style="{DynamicResource ButtonStyle2}" Click="PlansButton_Click"/>
        <Button x:Name="ProfileButton" Content="Profile" HorizontalAlignment="Left" Height="45" Margin="328,404,0,0" VerticalAlignment="Top" Width="130" Style="{DynamicResource ButtonStyle2}" Click="ProfileButton_Click" Grid.ColumnSpan="2" Grid.Row="1"/>
        <Button x:Name="ScheduleButton" Content="Scheduler" Grid.Column="1" HorizontalAlignment="Left" Height="45" Margin="214,404,0,0" Grid.Row="1" VerticalAlignment="Top" Width="146" Style="{DynamicResource ButtonStyle1}" Click="SchedulerButton_Click"/>

    </Grid>
</Window>
